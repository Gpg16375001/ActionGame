/*______________________________________________________________________________________________________________*/
/*																												*/
/*												ブロックの処理													*/
/*______________________________________________________________________________________________________________*/

#include <windows.h>
#include "Def.h"
#include "Work.h"

/*______________________________________________________*/
/*					  ブロックのセット					*/
/*￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣*/
void BlockSet( void )
{
	int y , x ;
	int i ;

	i = 0 ;												// i の初期セット
	for ( y = 0 ; y < 18 ; y++ )
	{
		for ( x = 0 ; x < 25 ; x++ )
		{
			if ( (map[y][x] != 0) && (map[y][x] != 8) )	// 見てる MAP の座標に何か入っているとき
			{
				blk[i].idno = ID_BLOCK ;				// その場所にブロックを入れる
				blk[i].mode = 0 ;						// MODE を初期セットにする
				blk[i].bno = map[y][x] ;				// BLOCK NUMBER にマップに入っている数値を入れる
														//  > 素のブロックの色を変えるため
				blk[i].xp = x * 32 + 16 ;				// X 座標を合わせる
				blk[i].yp = y * 32 ;					// Y 座標を合わせる

				i++ ;									// i をインクリメント	次のブロックを見るため
			}
		}
	}

}

/*______________________________________________________*/
/*					 BLOCK のアクション					*/
/*￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣*/
void ActBlock( void )
{
	switch ( bp->mode )
	{
		case 0:
			bp->yspd = 0 ;
			bp->mode = 1 ;
			bp->dspf = 1 ;								// ０：非表示	1：表示
			bp->xboff = 0 ;								// Ｘオフセット	anim
			bp->yboff = (bp->bno -1) * 32 ;				// Ｙオフセット
			break ;

		case 1 :
			break ;

		case 2 :
			bp->pchg[0] = 0 ;							// BLOCK アニメ　カウント
			bp->ys = bp->yp ;							// 初期の位置を覚えておく
			bp->yspd = -4.0 ;							// 上に動く

			bp->mode = 3 ;								// モード変更
			break ;

		case 3 :
			bp->yspd += 0.5 ;							// 重力
			bp->yp += bp->yspd ;						// 縦方向に動く
			if ( bp->yp >= bp->ys )						// BLOCK が元の位置に戻った時
			{
				bp->yspd = 0 ;
				bp->yp = bp->ys ;						// BLOCK が元の位置に戻す ( ずれる可能性があるため )
				bp->mode = 0 ;							// mode を通常状態に戻す
				bp->pchg[0] = 0 ;						// カウントを0に戻す
			}

			bp->pchg[0]++ ;								// カウントアップ　次のイラストに行くため
			if ( bp->pchg[0] >= 6 )						// 6 より大きくなった時
			{
				bp->pchg[0] = 0 ;						// 0 に戻す
			}
			bp->xboff = bp->pchg[0] * 32 ;				// 次のイラストを描画
			break ;

	}
}


